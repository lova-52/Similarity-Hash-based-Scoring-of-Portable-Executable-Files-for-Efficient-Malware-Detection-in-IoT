import ssdeep

def compute_esf(det_rates, cfi, dataset_I, dataset_II):
    esf = {}
    for method in det_rates.keys():
        if method == 'Pe_H' or method == 'Imp_H':
            if det_rates[method][0] > 0:
                esf[method] = cfi[method]
            else:
                esf[method] = 0
        elif method == 'Sd_H' or method == 'RSd_H':
            max_similarity = 0
            try:
                for index, row in dataset_II.iterrows():
                    query_result = dataset_I.loc[dataset_I[method].apply(lambda x: ssdeep.compare(x, row[method]) > 0)]
                    if not query_result.empty:
                        similarity = max(query_result.apply(lambda x: ssdeep.compare(x[method], row[method]), axis=1))
                        if similarity > max_similarity:
                            max_similarity = similarity
            except Exception as e:
                print(f"Error comparing hashes for method '{method}': {e}")
                continue
            esf[method] = cfi[method] * max_similarity
    return esf



